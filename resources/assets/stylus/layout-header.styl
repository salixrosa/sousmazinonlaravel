#banner {
  margin: 1rem 0 10rem;
  padding: 1rem 0;
  font-family: $bannerfont;
  color: $bannercolor;
  text-align: center;
  h1, h2 {
    font-size: 5.5rem;
    font-weight: bold;
    text-shadow: 2px 2px 4px #BABABA;
    span {
      font-size: 1.5em;
    }
  }
  nav { // this guy actually wraps #header-menu below, but we don't want our output CSS getting too messy so we keep IDs at the top
    height: 6rem; // the actual # here only matters a little for spacing, really we just need a general place-holder to keep content from shifting
  }
}

#header-menu {
  font-size: 1.8rem;
  letter-spacing: 3px;
  border: solid 1px;
  border-width: 1px 0;
  margin: 2.5rem 0 0;
  padding: 1rem 0;
  background-color: $bodybgc;
  position: relative; // puts on different z-level, otherwise would show below elements following in DOM
  li {
    padding: 1rem 0 1rem 1.75rem;
    letter-spacing: 3px;
    vertical-align: top;
    display: inline-block;
    position: relative;
    &:hover .sub-menu {
      max-height: 10rem;
      overflow: visible;
    }
  }
  .sub-menu {
    background-color: white;
    width: 100%;
    top: 100%;
		overflow: hidden;
		max-height: 0;
    li {
      height: 3rem;
      width: 100%;
      position: relative;
      letter-spacing: 1px;
      padding: 0;
      color: $menuhighlight;
    }
    a {
      position: absolute;
      left: 0;
      bottom: 0;
    }
    crosstransition(null, max-height, 1s,ease-in-out,null);
    li:last-child {
      padding-bottom: 5px;
      border-bottom: solid 1px $bannercolor;
    }
  }
}
#tagline {
  font-size: 2rem;
  font-weight: bold;
  letter-spacing: 2px;
  padding: 3rem 0;
}
.outerbutton, .innerbutton {
  display: none;
}

+respond-to(max-width, 675px)
  .menu-item-has-children:after
    font-family: 'FontAwesome';
    font-size: .9em;
    position: absolute;
    top: .83em;
    right: -2px;
    content: '\f0da';
  .menu-item-has-children:hover:after
    content: '\f0d7';
